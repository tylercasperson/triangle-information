{"version":3,"sources":["layout/Instructions.js","layout/SideInput.js","layout/Calculations.js","App.js","reportWebVitals.js","index.js"],"names":["Instructions","style","height","display","justifyContent","width","textAlign","SideInput","props","htmlFor","side","type","placeholder","id","name","onChange","Calculations","useState","sideA","setSideA","sideB","setSideB","sideC","setSideC","triangle","setTriangle","message","setMessage","useEffect","sideAnalysis","document","getElementById","value","window","setTimeout","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+NAyBeA,G,YAvBM,WACnB,OACE,qBACEC,MAAO,CACLC,OAAQ,MACRC,QAAS,OACTC,eAAgB,UAJpB,SAOE,qBACEH,MAAO,CACLI,MAAO,OACPC,UAAW,UAHf,+L,OCSSC,EAlBG,SAACC,GACjB,OACE,gCACE,uBACA,wBAAOC,QAAS,OAASD,EAAME,KAA/B,kBAA2CF,EAAME,KAAjD,eACA,uBACET,MAAO,CAAEI,MAAO,QAChBM,KAAK,SACLC,YAAY,sCACZC,GAAI,OAASL,EAAME,KACnBI,KAAM,OAASN,EAAME,KACrBK,SAAUP,EAAMO,WAElB,2BCiESC,EA7EM,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,OAECF,mBAAS,IAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGCJ,mBAAS,IAHV,mBAGlBK,EAHkB,KAGXC,EAHW,OAION,mBAAS,IAJhB,mBAIlBO,EAJkB,KAIRC,EAJQ,OAKKR,mBAAS,IALd,mBAKlBS,EALkB,KAKTC,EALS,KAOzBC,qBAAU,WACM,KAAVV,GAA0B,KAAVE,GAA0B,KAAVE,IAEhCG,EADEP,IAAUE,GAASF,IAAUI,EACnB,cACHJ,IAAUE,GAASF,IAAUI,EAC1B,YAEA,aAQZK,GAJCT,IAASE,IAAUE,IACnBJ,IAASI,IAAUF,IACnBA,IAASE,IAAUJ,EAET,sCAAD,OAAuCM,EAAvC,cAEC,mDAGd,CAACA,EAAUN,EAAOE,EAAOE,IAE5B,IAAMO,EAAe,SAACnB,GACpB,OAAQA,GACN,IAAK,IACHS,EAASW,SAASC,eAAe,OAASrB,GAAMsB,OAChD,MACF,IAAK,IACHX,EAASS,SAASC,eAAe,OAASrB,GAAMsB,OAChD,MACF,IAAK,IACHT,EAASO,SAASC,eAAe,OAASrB,GAAMsB,OAChD,MACF,QACE,SAIN,OACE,gCACE,cAAC,EAAD,CACEtB,KAAK,IACLK,SAAU,kBACRkB,OAAOC,YAAW,WAChBL,EAAa,OACZ,MAGP,cAAC,EAAD,CACEnB,KAAK,IACLK,SAAU,kBACRkB,OAAOC,YAAW,WAChBL,EAAa,OACZ,MAGP,cAAC,EAAD,CACEnB,KAAK,IACLK,SAAU,kBACRkB,OAAOC,YAAW,WAChBL,EAAa,OACZ,MAGP,uBACCH,MC5DQS,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BM,M","file":"static/js/main.363529ef.chunk.js","sourcesContent":["import React from 'react';\n\nconst Instructions = () => {\n  return (\n    <div\n      style={{\n        height: '7vh',\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <div\n        style={{\n          width: '40vw',\n          textAlign: 'center',\n        }}\n      >\n        Enter a number (natural or decimal) for each side. As soon as all three\n        fields have valid data in them, calculations will run to let you know\n        information about the triangle.\n      </div>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from 'react';\n\nconst SideInput = (props) => {\n  return (\n    <div>\n      <br />\n      <label htmlFor={'side' + props.side}>Side {props.side} length: </label>\n      <input\n        style={{ width: '20vw' }}\n        type='number'\n        placeholder='Numbers only (natural, or decimals)'\n        id={'side' + props.side}\n        name={'side' + props.side}\n        onChange={props.onChange}\n      />\n      <br />\n    </div>\n  );\n};\n\nexport default SideInput;\n","import React, { useState, useEffect } from 'react';\nimport SideInput from './SideInput';\n\nconst Calculations = () => {\n  const [sideA, setSideA] = useState('');\n  const [sideB, setSideB] = useState('');\n  const [sideC, setSideC] = useState('');\n  const [triangle, setTriangle] = useState('');\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    if (sideA !== '' && sideB !== '' && sideC !== '') {\n      if (sideA === sideB && sideA === sideC) {\n        setTriangle('Equilateral');\n      } else if (sideA !== sideB && sideA !== sideC) {\n        setTriangle('Scaleneal');\n      } else {\n        setTriangle('Isosceles');\n      }\n\n      if (\n        +sideA + +sideB >= +sideC &&\n        +sideA + +sideC >= +sideB &&\n        +sideB + +sideC >= +sideA\n      ) {\n        setMessage(`These side lengths produce a valid ${triangle} triangle.`);\n      } else {\n        setMessage('These sides do not produce a valid triangle.');\n      }\n    }\n  }, [triangle, sideA, sideB, sideC]);\n\n  const sideAnalysis = (side) => {\n    switch (side) {\n      case 'A':\n        setSideA(document.getElementById('side' + side).value);\n        break;\n      case 'B':\n        setSideB(document.getElementById('side' + side).value);\n        break;\n      case 'C':\n        setSideC(document.getElementById('side' + side).value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div>\n      <SideInput\n        side='A'\n        onChange={() =>\n          window.setTimeout(function () {\n            sideAnalysis('A');\n          }, 2)\n        }\n      />\n      <SideInput\n        side='B'\n        onChange={() =>\n          window.setTimeout(function () {\n            sideAnalysis('B');\n          }, 2)\n        }\n      />\n      <SideInput\n        side='C'\n        onChange={() =>\n          window.setTimeout(function () {\n            sideAnalysis('C');\n          }, 2)\n        }\n      />\n      <br />\n      {message}\n    </div>\n  );\n};\n\nexport default Calculations;\n","import React from 'react';\nimport './App.css';\n\nimport Instructions from './layout/Instructions';\nimport Calculations from './layout/Calculations.js';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Instructions />\n      <Calculations />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}